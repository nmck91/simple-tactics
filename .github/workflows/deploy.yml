name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

# Cancel in-progress deployments when a new deployment is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # Build Production Bundle
  # ============================================================================
  build:
    name: Build Production Bundle
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci

      - name: Build production bundle
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify bundle size
        run: |
          BUNDLE_SIZE=$(du -sb dist | awk '{print $1}')
          MAX_SIZE=$((2 * 1024 * 1024))

          echo "Bundle size: $(numfmt --to=iec-i --suffix=B $BUNDLE_SIZE)"
          echo "Maximum allowed: 2MB"

          if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
            echo "❌ Bundle size exceeds 2MB limit (NFR6)"
            exit 1
          else
            echo "✅ Bundle size within limit"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: dist/
          retention-days: 30

  # ============================================================================
  # Deploy to GitHub Pages
  # ============================================================================
  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && false  # Disabled - using Vercel instead

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-build
          path: dist/

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # ============================================================================
  # Deploy to Vercel
  # ============================================================================
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Enabled for Vercel deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-build
          path: dist/

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./dist

  # ============================================================================
  # Deploy to Netlify (Alternative)
  # ============================================================================
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && false  # Disabled by default, set to true to enable

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-build
          path: dist/

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # ============================================================================
  # Post-Deployment Verification
  # ============================================================================
  verify-deployment:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: github.ref == 'refs/heads/main' && false  # Disabled - Vercel handles verification

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Wait for deployment to propagate
        run: sleep 30

      - name: Run smoke tests
        run: |
          # Get the GitHub Pages URL
          PAGES_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

          echo "Testing deployment at: $PAGES_URL"

          # Check if the site is accessible
          RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PAGES_URL")

          if [ "$RESPONSE_CODE" -eq 200 ]; then
            echo "✅ Deployment successful! Site is accessible."
          else
            echo "❌ Deployment verification failed. HTTP $RESPONSE_CODE"
            exit 1
          fi

      - name: Check for critical resources
        run: |
          PAGES_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

          # Check if critical resources are accessible
          echo "Checking for critical resources..."

          # Check for index.html
          curl -f "$PAGES_URL/index.html" || echo "⚠️  Warning: index.html not found"

          # Check for tactics index
          curl -f "$PAGES_URL/data/tactics/index.json" || echo "⚠️  Warning: tactics index not found"

          echo "✅ Resource check complete"

  # ============================================================================
  # Deployment Summary
  # ============================================================================
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [build, deploy-vercel]
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "# Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Status:** ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy Status:** ${{ needs.deploy-vercel.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment URL:** Check Vercel dashboard for deployment URL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Visit https://vercel.com to view your deployment" >> $GITHUB_STEP_SUMMARY
